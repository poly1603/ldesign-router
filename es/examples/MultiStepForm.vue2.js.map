{"version":3,"file":"MultiStepForm.vue2.js","sources":["../../src/examples/MultiStepForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"multi-step-form\">\r\n    <div class=\"form-header\">\r\n      <h2>{{ currentStepInfo.title }}</h2>\r\n      <div class=\"progress-bar\">\r\n        <div \r\n          v-for=\"(step, index) in steps\" \r\n          :key=\"step.name\"\r\n          class=\"step-indicator\"\r\n          :class=\"{\r\n            'active': currentStepIndex === index,\r\n            'completed': completedSteps.has(step.name),\r\n            'error': stepErrors.has(step.name)\r\n          }\"\r\n          @click=\"navigateToStep(index)\"\r\n        >\r\n          <span class=\"step-number\">{{ index + 1 }}</span>\r\n          <span class=\"step-label\">{{ step.label }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <!-- Step 1: Personal Info -->\r\n      <div v-if=\"currentStep === 'personal'\" class=\"form-step\">\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\">First Name *</label>\r\n          <input\r\n            id=\"firstName\"\r\n            v-model=\"formData.firstName\"\r\n            type=\"text\"\r\n            required\r\n            @blur=\"validateField('firstName')\"\r\n          />\r\n          <span v-if=\"errors.firstName\" class=\"error\">{{ errors.firstName }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\">Last Name *</label>\r\n          <input\r\n            id=\"lastName\"\r\n            v-model=\"formData.lastName\"\r\n            type=\"text\"\r\n            required\r\n            @blur=\"validateField('lastName')\"\r\n          />\r\n          <span v-if=\"errors.lastName\" class=\"error\">{{ errors.lastName }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email *</label>\r\n          <input\r\n            id=\"email\"\r\n            v-model=\"formData.email\"\r\n            type=\"email\"\r\n            required\r\n            @blur=\"validateField('email')\"\r\n          />\r\n          <span v-if=\"errors.email\" class=\"error\">{{ errors.email }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"phone\">Phone</label>\r\n          <input\r\n            id=\"phone\"\r\n            v-model=\"formData.phone\"\r\n            type=\"tel\"\r\n            @blur=\"validateField('phone')\"\r\n          />\r\n          <span v-if=\"errors.phone\" class=\"error\">{{ errors.phone }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Step 2: Address -->\r\n      <div v-if=\"currentStep === 'address'\" class=\"form-step\">\r\n        <div class=\"form-group\">\r\n          <label for=\"street\">Street Address *</label>\r\n          <input\r\n            id=\"street\"\r\n            v-model=\"formData.street\"\r\n            type=\"text\"\r\n            required\r\n            @blur=\"validateField('street')\"\r\n          />\r\n          <span v-if=\"errors.street\" class=\"error\">{{ errors.street }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"city\">City *</label>\r\n          <input\r\n            id=\"city\"\r\n            v-model=\"formData.city\"\r\n            type=\"text\"\r\n            required\r\n            @blur=\"validateField('city')\"\r\n          />\r\n          <span v-if=\"errors.city\" class=\"error\">{{ errors.city }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"state\">State/Province *</label>\r\n          <input\r\n            id=\"state\"\r\n            v-model=\"formData.state\"\r\n            type=\"text\"\r\n            required\r\n            @blur=\"validateField('state')\"\r\n          />\r\n          <span v-if=\"errors.state\" class=\"error\">{{ errors.state }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"zipCode\">Zip/Postal Code *</label>\r\n          <input\r\n            id=\"zipCode\"\r\n            v-model=\"formData.zipCode\"\r\n            type=\"text\"\r\n            required\r\n            @blur=\"validateField('zipCode')\"\r\n          />\r\n          <span v-if=\"errors.zipCode\" class=\"error\">{{ errors.zipCode }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"country\">Country *</label>\r\n          <select\r\n            id=\"country\"\r\n            v-model=\"formData.country\"\r\n            required\r\n            @blur=\"validateField('country')\"\r\n          >\r\n            <option value=\"\">Select a country</option>\r\n            <option value=\"US\">United States</option>\r\n            <option value=\"CA\">Canada</option>\r\n            <option value=\"UK\">United Kingdom</option>\r\n            <option value=\"AU\">Australia</option>\r\n            <option value=\"CN\">China</option>\r\n            <option value=\"JP\">Japan</option>\r\n            <option value=\"KR\">South Korea</option>\r\n            <option value=\"SG\">Singapore</option>\r\n          </select>\r\n          <span v-if=\"errors.country\" class=\"error\">{{ errors.country }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Step 3: Preferences -->\r\n      <div v-if=\"currentStep === 'preferences'\" class=\"form-step\">\r\n        <div class=\"form-group\">\r\n          <label>Communication Preferences *</label>\r\n          <div class=\"checkbox-group\">\r\n            <label>\r\n              <input\r\n                v-model=\"formData.preferences.email\"\r\n                type=\"checkbox\"\r\n              />\r\n              Email notifications\r\n            </label>\r\n            <label>\r\n              <input\r\n                v-model=\"formData.preferences.sms\"\r\n                type=\"checkbox\"\r\n              />\r\n              SMS notifications\r\n            </label>\r\n            <label>\r\n              <input\r\n                v-model=\"formData.preferences.push\"\r\n                type=\"checkbox\"\r\n              />\r\n              Push notifications\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"newsletter\">Newsletter Frequency</label>\r\n          <select id=\"newsletter\" v-model=\"formData.newsletterFrequency\">\r\n            <option value=\"never\">Never</option>\r\n            <option value=\"daily\">Daily</option>\r\n            <option value=\"weekly\">Weekly</option>\r\n            <option value=\"monthly\">Monthly</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"language\">Preferred Language</label>\r\n          <select id=\"language\" v-model=\"formData.language\">\r\n            <option value=\"en\">English</option>\r\n            <option value=\"zh\">Chinese</option>\r\n            <option value=\"es\">Spanish</option>\r\n            <option value=\"fr\">French</option>\r\n            <option value=\"de\">German</option>\r\n            <option value=\"ja\">Japanese</option>\r\n            <option value=\"ko\">Korean</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"timezone\">Timezone</label>\r\n          <select id=\"timezone\" v-model=\"formData.timezone\">\r\n            <option value=\"UTC\">UTC</option>\r\n            <option value=\"EST\">Eastern Time</option>\r\n            <option value=\"CST\">Central Time</option>\r\n            <option value=\"PST\">Pacific Time</option>\r\n            <option value=\"GMT\">GMT</option>\r\n            <option value=\"JST\">Japan Time</option>\r\n            <option value=\"CST_CN\">China Time</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Step 4: Review -->\r\n      <div v-if=\"currentStep === 'review'\" class=\"form-step\">\r\n        <div class=\"review-section\">\r\n          <h3>Personal Information</h3>\r\n          <dl>\r\n            <dt>Name:</dt>\r\n            <dd>{{ formData.firstName }} {{ formData.lastName }}</dd>\r\n            <dt>Email:</dt>\r\n            <dd>{{ formData.email }}</dd>\r\n            <dt>Phone:</dt>\r\n            <dd>{{ formData.phone || 'Not provided' }}</dd>\r\n          </dl>\r\n        </div>\r\n\r\n        <div class=\"review-section\">\r\n          <h3>Address</h3>\r\n          <dl>\r\n            <dt>Street:</dt>\r\n            <dd>{{ formData.street }}</dd>\r\n            <dt>City:</dt>\r\n            <dd>{{ formData.city }}</dd>\r\n            <dt>State/Province:</dt>\r\n            <dd>{{ formData.state }}</dd>\r\n            <dt>Zip/Postal Code:</dt>\r\n            <dd>{{ formData.zipCode }}</dd>\r\n            <dt>Country:</dt>\r\n            <dd>{{ formData.country }}</dd>\r\n          </dl>\r\n        </div>\r\n\r\n        <div class=\"review-section\">\r\n          <h3>Preferences</h3>\r\n          <dl>\r\n            <dt>Notifications:</dt>\r\n            <dd>\r\n              <span v-if=\"formData.preferences.email\">Email </span>\r\n              <span v-if=\"formData.preferences.sms\">SMS </span>\r\n              <span v-if=\"formData.preferences.push\">Push </span>\r\n              <span v-if=\"!formData.preferences.email && !formData.preferences.sms && !formData.preferences.push\">None</span>\r\n            </dd>\r\n            <dt>Newsletter:</dt>\r\n            <dd>{{ formData.newsletterFrequency }}</dd>\r\n            <dt>Language:</dt>\r\n            <dd>{{ formData.language }}</dd>\r\n            <dt>Timezone:</dt>\r\n            <dd>{{ formData.timezone }}</dd>\r\n          </dl>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>\r\n            <input\r\n              v-model=\"formData.agreeToTerms\"\r\n              type=\"checkbox\"\r\n              required\r\n            />\r\n            I agree to the terms and conditions\r\n          </label>\r\n          <span v-if=\"errors.agreeToTerms\" class=\"error\">{{ errors.agreeToTerms }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Navigation buttons -->\r\n      <div class=\"form-navigation\">\r\n        <button\r\n          v-if=\"currentStepIndex > 0\"\r\n          type=\"button\"\r\n          class=\"btn btn-secondary\"\r\n          @click=\"previousStep\"\r\n          :disabled=\"isNavigating\"\r\n        >\r\n          Previous\r\n        </button>\r\n\r\n        <button\r\n          v-if=\"currentStepIndex < steps.length - 1\"\r\n          type=\"button\"\r\n          class=\"btn btn-primary\"\r\n          @click=\"nextStep\"\r\n          :disabled=\"!canProceed || isNavigating\"\r\n        >\r\n          Next\r\n        </button>\r\n\r\n        <button\r\n          v-if=\"currentStepIndex === steps.length - 1\"\r\n          type=\"submit\"\r\n          class=\"btn btn-success\"\r\n          :disabled=\"!isFormValid || isSubmitting\"\r\n        >\r\n          {{ isSubmitting ? 'Submitting...' : 'Submit' }}\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-link\"\r\n          @click=\"saveAndExit\"\r\n        >\r\n          Save & Exit\r\n        </button>\r\n      </div>\r\n    </form>\r\n\r\n    <!-- Auto-save indicator -->\r\n    <div v-if=\"autoSaveStatus\" class=\"auto-save-status\">\r\n      {{ autoSaveStatus }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, watch, onMounted, onBeforeUnmount } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport { useMultiStepForm } from '../features/form-route/composables'\r\n\r\ninterface FormData {\r\n  // Personal Info\r\n  firstName: string\r\n  lastName: string\r\n  email: string\r\n  phone: string\r\n  \r\n  // Address\r\n  street: string\r\n  city: string\r\n  state: string\r\n  zipCode: string\r\n  country: string\r\n  \r\n  // Preferences\r\n  preferences: {\r\n    email: boolean\r\n    sms: boolean\r\n    push: boolean\r\n  }\r\n  newsletterFrequency: string\r\n  language: string\r\n  timezone: string\r\n  \r\n  // Review\r\n  agreeToTerms: boolean\r\n}\r\n\r\nconst router = useRouter()\r\nconst route = useRoute()\r\n\r\n// Initialize form data\r\nconst initialFormData: FormData = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  phone: '',\r\n  street: '',\r\n  city: '',\r\n  state: '',\r\n  zipCode: '',\r\n  country: '',\r\n  preferences: {\r\n    email: true,\r\n    sms: false,\r\n    push: false\r\n  },\r\n  newsletterFrequency: 'monthly',\r\n  language: 'en',\r\n  timezone: 'UTC',\r\n  agreeToTerms: false\r\n}\r\n\r\n// Form steps configuration\r\nconst steps = [\r\n  { name: 'personal', label: 'Personal Info', title: 'Personal Information' },\r\n  { name: 'address', label: 'Address', title: 'Address Information' },\r\n  { name: 'preferences', label: 'Preferences', title: 'Communication Preferences' },\r\n  { name: 'review', label: 'Review', title: 'Review & Submit' }\r\n]\r\n\r\n// Form state\r\nconst formData = ref<FormData>({ ...initialFormData })\r\nconst errors = ref<Record<string, string>>({})\r\nconst currentStep = ref(steps[0].name)\r\nconst currentStepIndex = computed(() => steps.findIndex(s => s.name === currentStep.value))\r\nconst currentStepInfo = computed(() => steps[currentStepIndex.value])\r\nconst completedSteps = ref(new Set<string>())\r\nconst stepErrors = ref(new Set<string>())\r\nconst isNavigating = ref(false)\r\nconst isSubmitting = ref(false)\r\nconst autoSaveStatus = ref('')\r\n\r\n// Use form route management\r\nconst { \r\n  hasUnsavedChanges, \r\n  saveForm, \r\n  loadForm,\r\n  clearForm,\r\n  validateStep,\r\n  isStepValid,\r\n  canNavigateAway\r\n} = useFormRoute('multi-step-form', {\r\n  formData: formData.value,\r\n  currentStep: currentStep.value\r\n})\r\n\r\n// Validation rules\r\nconst validationRules: Record<string, (value: any) => string | null> = {\r\n  firstName: (value) => !value ? 'First name is required' : null,\r\n  lastName: (value) => !value ? 'Last name is required' : null,\r\n  email: (value) => {\r\n    if (!value) return 'Email is required'\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    return !emailRegex.test(value) ? 'Invalid email format' : null\r\n  },\r\n  phone: (value) => {\r\n    if (!value) return null // Optional field\r\n    const phoneRegex = /^[\\d\\s\\-\\+\\(\\)]+$/\r\n    return !phoneRegex.test(value) ? 'Invalid phone format' : null\r\n  },\r\n  street: (value) => !value ? 'Street address is required' : null,\r\n  city: (value) => !value ? 'City is required' : null,\r\n  state: (value) => !value ? 'State/Province is required' : null,\r\n  zipCode: (value) => !value ? 'Zip/Postal code is required' : null,\r\n  country: (value) => !value ? 'Country is required' : null,\r\n  agreeToTerms: (value) => !value ? 'You must agree to the terms' : null\r\n}\r\n\r\n// Validate single field\r\nconst validateField = (fieldName: string) => {\r\n  const value = fieldName.includes('.')\r\n    ? fieldName.split('.').reduce((obj, key) => obj?.[key], formData.value as any)\r\n    : (formData.value as any)[fieldName]\r\n    \r\n  const validator = validationRules[fieldName]\r\n  if (validator) {\r\n    const error = validator(value)\r\n    if (error) {\r\n      errors.value[fieldName] = error\r\n    } else {\r\n      delete errors.value[fieldName]\r\n    }\r\n  }\r\n}\r\n\r\n// Validate current step\r\nconst validateCurrentStep = (): boolean => {\r\n  const stepFields = getStepFields(currentStep.value)\r\n  let isValid = true\r\n  \r\n  stepFields.forEach(field => {\r\n    validateField(field)\r\n    if (errors.value[field]) {\r\n      isValid = false\r\n    }\r\n  })\r\n  \r\n  if (isValid) {\r\n    stepErrors.value.delete(currentStep.value)\r\n  } else {\r\n    stepErrors.value.add(currentStep.value)\r\n  }\r\n  \r\n  return isValid\r\n}\r\n\r\n// Get fields for a step\r\nconst getStepFields = (stepName: string): string[] => {\r\n  switch (stepName) {\r\n    case 'personal':\r\n      return ['firstName', 'lastName', 'email', 'phone']\r\n    case 'address':\r\n      return ['street', 'city', 'state', 'zipCode', 'country']\r\n    case 'preferences':\r\n      return []\r\n    case 'review':\r\n      return ['agreeToTerms']\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\n// Navigation\r\nconst canProceed = computed(() => {\r\n  if (currentStep.value === 'review') {\r\n    return formData.value.agreeToTerms\r\n  }\r\n  return !stepErrors.value.has(currentStep.value)\r\n})\r\n\r\nconst isFormValid = computed(() => {\r\n  return completedSteps.value.size === steps.length - 1 && \r\n         formData.value.agreeToTerms &&\r\n         stepErrors.value.size === 0\r\n})\r\n\r\nconst navigateToStep = async (stepIndex: number) => {\r\n  if (isNavigating.value) return\r\n  \r\n  const targetStep = steps[stepIndex]\r\n  if (!targetStep) return\r\n  \r\n  // Validate current step before leaving\r\n  if (stepIndex > currentStepIndex.value) {\r\n    if (!validateCurrentStep()) {\r\n      return\r\n    }\r\n  }\r\n  \r\n  isNavigating.value = true\r\n  \r\n  try {\r\n    // Mark current step as completed if valid\r\n    if (validateCurrentStep()) {\r\n      completedSteps.value.add(currentStep.value)\r\n    }\r\n    \r\n    // Navigate to new step\r\n    currentStep.value = targetStep.name\r\n    \r\n    // Update route\r\n    await router.push({\r\n      ...route.value,\r\n      query: { ...route.value.query, step: targetStep.name }\r\n    })\r\n  } finally {\r\n    isNavigating.value = false\r\n  }\r\n}\r\n\r\nconst nextStep = () => {\r\n  if (currentStepIndex.value < steps.length - 1) {\r\n    navigateToStep(currentStepIndex.value + 1)\r\n  }\r\n}\r\n\r\nconst previousStep = () => {\r\n  if (currentStepIndex.value > 0) {\r\n    navigateToStep(currentStepIndex.value - 1)\r\n  }\r\n}\r\n\r\n// Auto-save functionality\r\nconst autoSave = async () => {\r\n  try {\r\n    autoSaveStatus.value = 'Saving...'\r\n    await saveForm({\r\n      formData: formData.value,\r\n      currentStep: currentStep.value,\r\n      completedSteps: Array.from(completedSteps.value)\r\n    })\r\n    autoSaveStatus.value = 'Saved'\r\n    setTimeout(() => {\r\n      autoSaveStatus.value = ''\r\n    }, 2000)\r\n  } catch (error) {\r\n    autoSaveStatus.value = 'Save failed'\r\n    console.error('Auto-save failed:', error)\r\n  }\r\n}\r\n\r\n// Save and exit\r\nconst saveAndExit = async () => {\r\n  await autoSave()\r\n  router.push('/')\r\n}\r\n\r\n// Submit form\r\nconst handleSubmit = async () => {\r\n  if (!isFormValid.value) return\r\n  \r\n  isSubmitting.value = true\r\n  \r\n  try {\r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n    \r\n    // Clear form data\r\n    await clearForm()\r\n    \r\n    // Navigate to success page\r\n    await router.push('/success')\r\n  } catch (error) {\r\n    console.error('Form submission failed:', error)\r\n  } finally {\r\n    isSubmitting.value = false\r\n  }\r\n}\r\n\r\n// Watch for form changes and auto-save\r\nlet autoSaveTimer: NodeJS.Timeout | null = null\r\nwatch(formData, () => {\r\n  if (autoSaveTimer) {\r\n    clearTimeout(autoSaveTimer)\r\n  }\r\n  autoSaveTimer = setTimeout(autoSave, 3000)\r\n}, { deep: true })\r\n\r\n// Load saved form data on mount\r\nonMounted(async () => {\r\n  const savedData = await loadForm()\r\n  if (savedData) {\r\n    formData.value = savedData.formData || formData.value\r\n    currentStep.value = savedData.currentStep || currentStep.value\r\n    if (savedData.completedSteps) {\r\n      completedSteps.value = new Set(savedData.completedSteps)\r\n    }\r\n  }\r\n  \r\n  // Check for step in route query\r\n  const stepQuery = route.value.query.step as string\r\n  if (stepQuery && steps.some(s => s.name === stepQuery)) {\r\n    currentStep.value = stepQuery\r\n  }\r\n})\r\n\r\n// Clean up on unmount\r\nonBeforeUnmount(() => {\r\n  if (autoSaveTimer) {\r\n    clearTimeout(autoSaveTimer)\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.multi-step-form {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.form-header {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.form-header h2 {\r\n  margin-bottom: 1.5rem;\r\n  color: #333;\r\n}\r\n\r\n.progress-bar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 2rem;\r\n  position: relative;\r\n}\r\n\r\n.progress-bar::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 0;\r\n  right: 0;\r\n  height: 2px;\r\n  background: #e0e0e0;\r\n  z-index: 0;\r\n}\r\n\r\n.step-indicator {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.step-indicator:hover .step-number {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.step-number {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background: #fff;\r\n  border: 2px solid #e0e0e0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  margin-bottom: 0.5rem;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.step-indicator.active .step-number {\r\n  background: #007bff;\r\n  color: white;\r\n  border-color: #007bff;\r\n}\r\n\r\n.step-indicator.completed .step-number {\r\n  background: #28a745;\r\n  color: white;\r\n  border-color: #28a745;\r\n}\r\n\r\n.step-indicator.error .step-number {\r\n  background: #dc3545;\r\n  color: white;\r\n  border-color: #dc3545;\r\n}\r\n\r\n.step-label {\r\n  font-size: 0.875rem;\r\n  color: #666;\r\n}\r\n\r\n.step-indicator.active .step-label {\r\n  color: #007bff;\r\n  font-weight: 600;\r\n}\r\n\r\n.form-step {\r\n  min-height: 300px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\n.form-group input,\r\n.form-group select {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.form-group input:focus,\r\n.form-group select:focus {\r\n  outline: none;\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.1);\r\n}\r\n\r\n.checkbox-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.checkbox-group label {\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: normal;\r\n  cursor: pointer;\r\n}\r\n\r\n.checkbox-group input[type=\"checkbox\"] {\r\n  width: auto;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.error {\r\n  color: #dc3545;\r\n  font-size: 0.875rem;\r\n  margin-top: 0.25rem;\r\n  display: block;\r\n}\r\n\r\n.review-section {\r\n  margin-bottom: 1.5rem;\r\n  padding: 1rem;\r\n  background: #f8f9fa;\r\n  border-radius: 4px;\r\n}\r\n\r\n.review-section h3 {\r\n  margin-bottom: 1rem;\r\n  color: #333;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.review-section dl {\r\n  display: grid;\r\n  grid-template-columns: 150px 1fr;\r\n  gap: 0.5rem;\r\n  margin: 0;\r\n}\r\n\r\n.review-section dt {\r\n  font-weight: 600;\r\n  color: #666;\r\n}\r\n\r\n.review-section dd {\r\n  margin: 0;\r\n  color: #333;\r\n}\r\n\r\n.form-navigation {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 1rem;\r\n  margin-top: 2rem;\r\n  padding-top: 2rem;\r\n  border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n.btn {\r\n  padding: 0.5rem 1.5rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-primary {\r\n  background: #007bff;\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover:not(:disabled) {\r\n  background: #0056b3;\r\n}\r\n\r\n.btn-secondary {\r\n  background: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.btn-secondary:hover:not(:disabled) {\r\n  background: #545b62;\r\n}\r\n\r\n.btn-success {\r\n  background: #28a745;\r\n  color: white;\r\n}\r\n\r\n.btn-success:hover:not(:disabled) {\r\n  background: #218838;\r\n}\r\n\r\n.btn-link {\r\n  background: none;\r\n  color: #007bff;\r\n  text-decoration: underline;\r\n}\r\n\r\n.btn-link:hover {\r\n  color: #0056b3;\r\n}\r\n\r\n.auto-save-status {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  padding: 0.5rem 1rem;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  border-radius: 4px;\r\n  font-size: 0.875rem;\r\n}\r\n</style>"],"names":["router","useRouter","route","useRoute","initialFormData","firstName","lastName","email","phone","street","city","state","zipCode","country","preferences","sms","push","newsletterFrequency","language","timezone","agreeToTerms","steps","name","label","title","formData","ref","errors","currentStep","currentStepIndex","computed","findIndex","s","value","currentStepInfo","completedSteps","Set","stepErrors","isNavigating","isSubmitting","autoSaveStatus","hasUnsavedChanges","saveForm","loadForm","clearForm","validateStep","isStepValid","canNavigateAway","useFormRoute","validationRules","emailRegex","test","phoneRegex","validateField","fieldName","includes","split","reduce","obj","key","validator","error","validateCurrentStep","stepFields","getStepFields","isValid","forEach","field","delete","add","stepName","canProceed","has","isFormValid","size","length","navigateToStep","stepIndex","targetStep","query","step","nextStep","previousStep","autoSave","Array","from","setTimeout","console","saveAndExit","handleSubmit","Promise","resolve","autoSaveTimer","watch","clearTimeout","deep","onMounted","savedData","stepQuery","some","onBeforeUnmount","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","_hoisted_3","_Fragment","_renderList","index","class","onClick","$event","_hoisted_5","_hoisted_6","onSubmit","_createCommentVNode","_hoisted_7","_hoisted_8","_cache","for","id","type","required","onBlur","_vModelText","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_vModelSelect","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_41","_vModelCheckbox","_hoisted_42","_hoisted_43","disabled","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47"],"mappings":"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"}