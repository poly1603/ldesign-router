{"version":3,"file":"GeolocationModule.js","sources":["../../../../../device/es/modules/GeolocationModule.js"],"sourcesContent":["/*!\n * ***********************************\n * @ldesign/device v0.1.0          *\n * Built with rollup               *\n * Build time: 2024-10-21 14:32:55 *\n * Build mode: production          *\n * Minified: No                    *\n * ***********************************\n */\nimport { EventEmitter } from '../core/EventEmitter.js';\nimport { safeNavigatorAccess } from '../utils/index.js';\n\nclass GeolocationModule extends EventEmitter {\n  constructor(options = {}) {\n    super();\n    this.name = \"geolocation\";\n    this.geolocationInfo = null;\n    this.watchId = null;\n    this.options = {\n      enableHighAccuracy: true,\n      timeout: 1e4,\n      maximumAge: 3e5,\n      // 5 minutes\n      ...options\n    };\n  }\n  /**\n   * 初始化模块\n   */\n  async init() {\n    if (typeof window === \"undefined\") return;\n    if (!this.isSupported()) {\n      return;\n    }\n    try {\n      this.getCurrentPosition().catch((error) => {\n        if (error.message !== \"Permission denied\") {\n          console.warn(\"Failed to get initial position:\", error);\n        }\n      });\n    } catch (error) {\n      if (error.message !== \"Permission denied\") {\n        console.warn(\"Failed to get initial position:\", error);\n      }\n    }\n  }\n  /**\n   * 销毁模块\n   */\n  async destroy() {\n    this.stopWatching();\n  }\n  /**\n   * 获取地理位置信息\n   */\n  getData() {\n    return this.geolocationInfo ? {\n      ...this.geolocationInfo\n    } : null;\n  }\n  /**\n   * 检查是否支持地理位置 API\n   */\n  isSupported() {\n    return safeNavigatorAccess((nav) => {\n      const g = nav.geolocation;\n      return !!(g && typeof g.getCurrentPosition === \"function\");\n    }, false);\n  }\n  /**\n   * 获取当前位置\n   */\n  async getCurrentPosition(options) {\n    const positionOptions = options ? {\n      ...this.options,\n      ...options\n    } : this.options;\n    return new Promise((resolve, reject) => {\n      if (!this.isSupported()) {\n        reject(new Error(\"Geolocation is not supported\"));\n        return;\n      }\n      navigator.geolocation.getCurrentPosition((position) => {\n        const info = this.parsePosition(position);\n        this.geolocationInfo = info;\n        this.emit(\"positionChange\", info);\n        resolve(info);\n      }, (error) => {\n        reject(this.parseGeolocationError(error));\n      }, positionOptions);\n    });\n  }\n  /**\n   * 开始监听位置变化\n   */\n  startWatching(callback) {\n    if (!this.isSupported()) {\n      throw new Error(\"Geolocation API is not supported\");\n    }\n    if (this.watchId !== null) {\n      this.stopWatching();\n    }\n    this.watchId = navigator.geolocation.watchPosition((position) => {\n      const info = this.parsePosition(position);\n      this.geolocationInfo = info;\n      this.emit(\"positionChange\", info);\n      callback?.(info);\n    }, (error) => {\n      console.error(\"Geolocation watch error:\", this.parseGeolocationError(error));\n    }, this.options);\n  }\n  /**\n   * 停止监听位置变化\n   */\n  stopWatching() {\n    if (this.watchId !== null && this.isSupported()) {\n      navigator.geolocation.clearWatch(this.watchId);\n      this.watchId = null;\n    }\n  }\n  /**\n   * 监听位置变化（别名方法，用于测试兼容性）\n   */\n  watchPosition(callback) {\n    if (!this.isSupported()) {\n      throw new Error(\"Geolocation API is not supported\");\n    }\n    if (this.watchId !== null) {\n      this.stopWatching();\n    }\n    this.watchId = navigator.geolocation.watchPosition((position) => {\n      const info = this.parsePosition(position);\n      this.geolocationInfo = info;\n      this.emit(\"positionChange\", info);\n      callback(info);\n    }, (error) => {\n      console.error(\"Geolocation watch error:\", this.parseGeolocationError(error));\n    }, this.options);\n    return this.watchId;\n  }\n  /**\n   * 清除位置监听（别名方法，用于测试兼容性）\n   */\n  clearWatch(watchId) {\n    if (this.isSupported()) {\n      navigator.geolocation.clearWatch(watchId);\n      if (this.watchId === watchId) {\n        this.watchId = null;\n      }\n    }\n  }\n  /**\n   * 获取纬度\n   */\n  getLatitude() {\n    return this.geolocationInfo?.latitude ?? null;\n  }\n  /**\n   * 获取经度\n   */\n  getLongitude() {\n    return this.geolocationInfo?.longitude ?? null;\n  }\n  /**\n   * 获取精度（米）\n   */\n  getAccuracy() {\n    return this.geolocationInfo?.accuracy ?? null;\n  }\n  /**\n   * 获取海拔（米）\n   */\n  getAltitude() {\n    return this.geolocationInfo?.altitude ?? null;\n  }\n  /**\n   * 获取海拔精度（米）\n   */\n  getAltitudeAccuracy() {\n    return this.geolocationInfo?.altitudeAccuracy ?? null;\n  }\n  /**\n   * 获取方向（度）\n   */\n  getHeading() {\n    return this.geolocationInfo?.heading ?? null;\n  }\n  /**\n   * 获取速度（米/秒）\n   */\n  getSpeed() {\n    return this.geolocationInfo?.speed ?? null;\n  }\n  /**\n   * 计算两点之间的距离（米）\n   */\n  calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371e3;\n    const \\u03C61 = lat1 * Math.PI / 180;\n    const \\u03C62 = lat2 * Math.PI / 180;\n    const \\u0394\\u03C6 = (lat2 - lat1) * Math.PI / 180;\n    const \\u0394\\u03BB = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(\\u0394\\u03C6 / 2) * Math.sin(\\u0394\\u03C6 / 2) + Math.cos(\\u03C61) * Math.cos(\\u03C62) * Math.sin(\\u0394\\u03BB / 2) * Math.sin(\\u0394\\u03BB / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  }\n  /**\n   * 计算与当前位置的距离\n   */\n  getDistanceFromCurrent(latitude, longitude) {\n    if (!this.geolocationInfo) return null;\n    return this.calculateDistance(this.geolocationInfo.latitude, this.geolocationInfo.longitude, latitude, longitude);\n  }\n  /**\n   * 解析位置信息\n   */\n  parsePosition(position) {\n    const {\n      coords\n    } = position;\n    return {\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      accuracy: coords.accuracy,\n      altitude: coords.altitude ?? null,\n      altitudeAccuracy: coords.altitudeAccuracy ?? null,\n      heading: coords.heading ?? null,\n      speed: coords.speed ?? null,\n      // 一些测试期望包含时间戳\n      timestamp: typeof position.timestamp === \"number\" ? position.timestamp : Date.now()\n    };\n  }\n  /**\n   * 解析地理位置错误\n   */\n  parseGeolocationError(error) {\n    const errorMessages = {\n      [error.PERMISSION_DENIED]: \"Permission denied\",\n      [error.POSITION_UNAVAILABLE]: \"Position unavailable\",\n      [error.TIMEOUT]: \"Request timeout\"\n    };\n    const message = errorMessages[error.code] || \"An unknown error occurred\";\n    return new Error(message);\n  }\n}\n\nexport { GeolocationModule };\n/*! End of @ldesign/device | Powered by @ldesign/builder */\n//# sourceMappingURL=GeolocationModule.js.map\n"],"names":["GeolocationModule","EventEmitter","constructor","options","name","geolocationInfo","watchId","enableHighAccuracy","timeout","maximumAge","init","window","isSupported","getCurrentPosition","catch","error","message","console","warn","destroy","stopWatching","getData","safeNavigatorAccess","nav","g","geolocation","positionOptions","Promise","resolve","reject","Error","navigator","position","info","parsePosition","emit","parseGeolocationError","startWatching","callback","watchPosition","clearWatch","getLatitude","latitude","getLongitude","longitude","getAccuracy","accuracy","getAltitude","altitude","getAltitudeAccuracy","altitudeAccuracy","getHeading","heading","getSpeed","speed","calculateDistance","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","getDistanceFromCurrent","coords","timestamp","Date","now","errorMessages","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","code"],"mappings":"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"}