{"version":3,"file":"NetworkModule.js","sources":["../../../../../device/es/modules/NetworkModule.js"],"sourcesContent":["/*!\n * ***********************************\n * @ldesign/device v0.1.0          *\n * Built with rollup               *\n * Build time: 2024-10-21 14:32:55 *\n * Build mode: production          *\n * Minified: No                    *\n * ***********************************\n */\nimport { EventEmitter } from '../core/EventEmitter.js';\nimport { safeNavigatorAccess } from '../utils/index.js';\n\nclass NetworkModule extends EventEmitter {\n  constructor() {\n    super();\n    this.name = \"network\";\n    this.connection = null;\n    this.networkInfo = this.detectNetworkInfo();\n  }\n  /**\n   * 初始化模块\n   */\n  async init() {\n    if (typeof window === \"undefined\") return;\n    this.connection = safeNavigatorAccess((nav) => {\n      const navAny = nav;\n      return navAny.connection || navAny.mozConnection || navAny.webkitConnection;\n    }, null);\n    this.setupEventListeners();\n    this.updateNetworkInfo();\n  }\n  /**\n   * 销毁模块（优化：彻底清理所有引用）\n   */\n  async destroy() {\n    this.removeEventListeners();\n    this.connection = null;\n    this.onlineHandler = void 0;\n    this.offlineHandler = void 0;\n    this.changeHandler = void 0;\n  }\n  /**\n   * 获取网络信息\n   */\n  getData() {\n    return {\n      ...this.networkInfo\n    };\n  }\n  /**\n   * 获取网络信息（别名方法，用于测试兼容性）\n   */\n  getNetworkInfo() {\n    const connection = this.connection ?? safeNavigatorAccess((nav) => {\n      const navAny = nav;\n      return navAny.connection || navAny.mozConnection || navAny.webkitConnection;\n    }, null);\n    const online = typeof navigator !== \"undefined\" ? !!navigator.onLine : true;\n    const effectiveType = connection?.effectiveType || connection?.type || \"unknown\";\n    const status = online ? \"online\" : \"offline\";\n    const info = {\n      status,\n      type: this.parseConnectionType(effectiveType),\n      online,\n      effectiveType,\n      supported: !!connection\n    };\n    info.downlink = typeof connection?.downlink === \"number\" ? connection.downlink : 0;\n    info.rtt = typeof connection?.rtt === \"number\" ? Math.max(0, connection.rtt) : 0;\n    if (typeof connection?.saveData === \"boolean\") info.saveData = connection.saveData;\n    return info;\n  }\n  /**\n   * 获取网络连接状态\n   */\n  getStatus() {\n    return this.networkInfo.status;\n  }\n  /**\n   * 获取网络连接类型\n   */\n  getConnectionType() {\n    return this.networkInfo.type;\n  }\n  /**\n   * 获取下载速度（Mbps）\n   */\n  getDownlink() {\n    return this.networkInfo.downlink;\n  }\n  /**\n   * 获取往返时间（毫秒）\n   */\n  getRTT() {\n    return this.networkInfo.rtt;\n  }\n  /**\n   * 是否为计量连接\n   */\n  isSaveData() {\n    return this.networkInfo.saveData;\n  }\n  /**\n   * 检查是否在线\n   */\n  isOnline() {\n    return this.networkInfo.status === \"online\";\n  }\n  /**\n   * 检查是否离线\n   */\n  isOffline() {\n    return this.networkInfo.status === \"offline\";\n  }\n  /**\n   * 检测网络信息\n   */\n  detectNetworkInfo() {\n    if (typeof window === \"undefined\") {\n      return {\n        status: \"online\",\n        type: \"unknown\",\n        online: true,\n        effectiveType: \"unknown\",\n        supported: false\n      };\n    }\n    const status = navigator.onLine ? \"online\" : \"offline\";\n    const connection = safeNavigatorAccess((nav) => {\n      const navAny = nav;\n      return navAny.connection || navAny.mozConnection || navAny.webkitConnection;\n    }, null);\n    const info = {\n      online: status === \"online\",\n      effectiveType: connection?.effectiveType || connection?.type || \"unknown\",\n      supported: !!connection,\n      // 扩展字段（内部使用）\n      status,\n      type: this.parseConnectionType(connection?.effectiveType || connection?.type)\n    };\n    if (connection) {\n      if (typeof connection.downlink === \"number\") {\n        info.downlink = connection.downlink;\n      } else {\n        info.downlink = 0;\n      }\n      if (typeof connection.rtt === \"number\") {\n        info.rtt = Math.max(0, connection.rtt);\n      } else {\n        info.rtt = 0;\n      }\n      if (typeof connection.saveData === \"boolean\") {\n        info.saveData = connection.saveData;\n      }\n    } else {\n      info.downlink = 0;\n      info.rtt = 0;\n    }\n    return info;\n  }\n  /**\n   * 解析连接类型\n   */\n  parseConnectionType(type) {\n    if (!type) return \"unknown\";\n    const typeMap = {\n      \"slow-2g\": \"cellular\",\n      \"2g\": \"cellular\",\n      \"3g\": \"cellular\",\n      \"4g\": \"cellular\",\n      \"5g\": \"cellular\",\n      \"wifi\": \"wifi\",\n      \"ethernet\": \"ethernet\",\n      \"bluetooth\": \"bluetooth\"\n    };\n    return typeMap[type.toLowerCase()] || \"unknown\";\n  }\n  /**\n   * 更新网络信息\n   */\n  updateNetworkInfo() {\n    const oldInfo = this.networkInfo;\n    const newInfo = this.detectNetworkInfo();\n    const hasChanged = oldInfo.online !== newInfo.online || oldInfo.status !== newInfo.status || oldInfo.type !== newInfo.type || oldInfo.effectiveType !== newInfo.effectiveType || oldInfo.downlink !== newInfo.downlink || oldInfo.rtt !== newInfo.rtt || oldInfo.saveData !== newInfo.saveData;\n    this.networkInfo = newInfo;\n    if (hasChanged) {\n      this.emit(\"networkChange\", this.getNetworkInfo());\n    }\n  }\n  /**\n   * 设置事件监听器\n   */\n  setupEventListeners() {\n    if (typeof window === \"undefined\") return;\n    this.onlineHandler = () => {\n      this.updateNetworkInfo();\n    };\n    this.offlineHandler = () => {\n      this.updateNetworkInfo();\n    };\n    window.addEventListener(\"online\", this.onlineHandler);\n    window.addEventListener(\"offline\", this.offlineHandler);\n    window.ononline = this.onlineHandler;\n    window.onoffline = this.offlineHandler;\n    if (this.connection && \"addEventListener\" in this.connection) {\n      this.changeHandler = () => {\n        this.updateNetworkInfo();\n      };\n      if (this.connection?.addEventListener) {\n        this.connection.addEventListener(\"change\", this.changeHandler);\n      }\n    }\n  }\n  /**\n   * 移除事件监听器\n   */\n  removeEventListeners() {\n    if (typeof window === \"undefined\") return;\n    if (this.onlineHandler) {\n      window.removeEventListener(\"online\", this.onlineHandler);\n      window.ononline = null;\n      this.onlineHandler = void 0;\n    }\n    if (this.offlineHandler) {\n      window.removeEventListener(\"offline\", this.offlineHandler);\n      window.onoffline = null;\n      this.offlineHandler = void 0;\n    }\n    if (this.connection?.removeEventListener && this.changeHandler) {\n      this.connection.removeEventListener(\"change\", this.changeHandler);\n      this.changeHandler = void 0;\n    }\n    this.connection = null;\n  }\n}\n\nexport { NetworkModule };\n/*! End of @ldesign/device | Powered by @ldesign/builder */\n//# sourceMappingURL=NetworkModule.js.map\n"],"names":["NetworkModule","EventEmitter","constructor","name","connection","networkInfo","detectNetworkInfo","init","window","safeNavigatorAccess","nav","navAny","mozConnection","webkitConnection","setupEventListeners","updateNetworkInfo","destroy","removeEventListeners","onlineHandler","offlineHandler","changeHandler","getData","getNetworkInfo","online","navigator","onLine","effectiveType","type","status","info","parseConnectionType","supported","downlink","rtt","Math","max","saveData","getStatus","getConnectionType","getDownlink","getRTT","isSaveData","isOnline","isOffline","typeMap","toLowerCase","oldInfo","newInfo","hasChanged","emit","addEventListener","ononline","onoffline","removeEventListener"],"mappings":"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"}