{"version":3,"file":"MediaModule.js","sources":["../../../../../device/es/modules/MediaModule.js"],"sourcesContent":["/*!\n * ***********************************\n * @ldesign/device v0.1.0          *\n * Built with rollup               *\n * Build time: 2024-10-21 14:32:55 *\n * Build mode: production          *\n * Minified: No                    *\n * ***********************************\n */\nimport { EventEmitter } from '../core/EventEmitter.js';\nimport { safeNavigatorAccess } from '../utils/index.js';\n\nclass MediaModule extends EventEmitter {\n  constructor() {\n    super();\n    this.name = \"media\";\n    this.permissionCheckers = /* @__PURE__ */ new Map();\n    this.mediaInfo = this.getDefaultMediaInfo();\n  }\n  /**\n   * 初始化模块\n   */\n  async init() {\n    if (typeof window === \"undefined\") return;\n    try {\n      await this.detectMediaDevices();\n      this.setupDeviceChangeListener();\n      this.startPermissionMonitoring();\n    } catch (error) {\n      console.warn(\"Media devices detection failed:\", error);\n    }\n  }\n  /**\n   * 销毁模块\n   */\n  async destroy() {\n    this.removeDeviceChangeListener();\n    this.stopPermissionMonitoring();\n  }\n  /**\n   * 获取媒体设备信息\n   */\n  getData() {\n    return {\n      ...this.mediaInfo\n    };\n  }\n  /**\n   * 检查是否支持媒体设备 API\n   */\n  isSupported() {\n    return safeNavigatorAccess((nav) => \"mediaDevices\" in nav && \"enumerateDevices\" in nav.mediaDevices, false);\n  }\n  /**\n   * 获取摄像头列表\n   */\n  getCameras() {\n    return [...this.mediaInfo.cameras];\n  }\n  /**\n   * 获取麦克风列表\n   */\n  getMicrophones() {\n    return [...this.mediaInfo.microphones];\n  }\n  /**\n   * 获取扬声器列表\n   */\n  getSpeakers() {\n    return [...this.mediaInfo.speakers];\n  }\n  /**\n   * 检查是否有摄像头\n   */\n  hasCamera() {\n    return this.mediaInfo.hasCamera;\n  }\n  /**\n   * 检查是否有麦克风\n   */\n  hasMicrophone() {\n    return this.mediaInfo.hasMicrophone;\n  }\n  /**\n   * 检查是否有扬声器\n   */\n  hasSpeaker() {\n    return this.mediaInfo.hasSpeaker;\n  }\n  /**\n   * 请求摄像头权限\n   */\n  async requestCameraPermission() {\n    if (!this.isSupported()) return false;\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      stream.getTracks().forEach((track) => track.stop());\n      this.mediaInfo.cameraPermission = \"granted\";\n      this.emit(\"permissionChange\", {\n        type: \"camera\",\n        state: \"granted\"\n      });\n      await this.detectMediaDevices();\n      return true;\n    } catch {\n      this.mediaInfo.cameraPermission = \"denied\";\n      this.emit(\"permissionChange\", {\n        type: \"camera\",\n        state: \"denied\"\n      });\n      return false;\n    }\n  }\n  /**\n   * 请求麦克风权限\n   */\n  async requestMicrophonePermission() {\n    if (!this.isSupported()) return false;\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      stream.getTracks().forEach((track) => track.stop());\n      this.mediaInfo.microphonePermission = \"granted\";\n      this.emit(\"permissionChange\", {\n        type: \"microphone\",\n        state: \"granted\"\n      });\n      await this.detectMediaDevices();\n      return true;\n    } catch {\n      this.mediaInfo.microphonePermission = \"denied\";\n      this.emit(\"permissionChange\", {\n        type: \"microphone\",\n        state: \"denied\"\n      });\n      return false;\n    }\n  }\n  /**\n   * 获取默认媒体信息\n   */\n  getDefaultMediaInfo() {\n    return {\n      supported: false,\n      hasCamera: false,\n      hasMicrophone: false,\n      hasSpeaker: false,\n      cameras: [],\n      microphones: [],\n      speakers: [],\n      cameraPermission: \"unknown\",\n      microphonePermission: \"unknown\"\n    };\n  }\n  /**\n   * 检测媒体设备\n   */\n  async detectMediaDevices() {\n    if (!this.isSupported()) {\n      this.mediaInfo.supported = false;\n      return;\n    }\n    try {\n      this.mediaInfo.supported = true;\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const cameras = [];\n      const microphones = [];\n      const speakers = [];\n      devices.forEach((device, index) => {\n        const deviceItem = {\n          deviceId: device.deviceId || `device-${index}`,\n          label: device.label || `${device.kind} ${index + 1}`,\n          kind: device.kind,\n          groupId: device.groupId\n        };\n        switch (device.kind) {\n          case \"videoinput\":\n            cameras.push(deviceItem);\n            break;\n          case \"audioinput\":\n            microphones.push(deviceItem);\n            break;\n          case \"audiooutput\":\n            speakers.push(deviceItem);\n            break;\n        }\n      });\n      this.mediaInfo = {\n        ...this.mediaInfo,\n        hasCamera: cameras.length > 0,\n        hasMicrophone: microphones.length > 0,\n        hasSpeaker: speakers.length > 0,\n        cameras,\n        microphones,\n        speakers\n      };\n      await this.checkPermissions();\n      this.emit(\"deviceChange\", this.mediaInfo);\n    } catch (error) {\n      console.warn(\"Failed to enumerate media devices:\", error);\n    }\n  }\n  /**\n   * 检查权限状态\n   */\n  async checkPermissions() {\n    if (!(\"permissions\" in navigator)) return;\n    try {\n      const cameraPermission = await navigator.permissions.query({\n        name: \"camera\"\n      });\n      this.mediaInfo.cameraPermission = cameraPermission.state;\n      cameraPermission.addEventListener(\"change\", () => {\n        this.mediaInfo.cameraPermission = cameraPermission.state;\n        this.emit(\"permissionChange\", {\n          type: \"camera\",\n          state: cameraPermission.state\n        });\n      });\n    } catch {\n    }\n    try {\n      const microphonePermission = await navigator.permissions.query({\n        name: \"microphone\"\n      });\n      this.mediaInfo.microphonePermission = microphonePermission.state;\n      microphonePermission.addEventListener(\"change\", () => {\n        this.mediaInfo.microphonePermission = microphonePermission.state;\n        this.emit(\"permissionChange\", {\n          type: \"microphone\",\n          state: microphonePermission.state\n        });\n      });\n    } catch {\n    }\n  }\n  /**\n   * 设置设备变化监听器\n   */\n  setupDeviceChangeListener() {\n    if (!this.isSupported()) return;\n    this.deviceChangeHandler = async () => {\n      await this.detectMediaDevices();\n    };\n    navigator.mediaDevices.addEventListener(\"devicechange\", this.deviceChangeHandler);\n  }\n  /**\n   * 移除设备变化监听器\n   */\n  removeDeviceChangeListener() {\n    if (!this.isSupported() || !this.deviceChangeHandler) return;\n    navigator.mediaDevices.removeEventListener(\"devicechange\", this.deviceChangeHandler);\n    this.deviceChangeHandler = void 0;\n  }\n  /**\n   * 开始权限状态监控\n   */\n  startPermissionMonitoring() {\n    const checker = setInterval(async () => {\n      await this.checkPermissions();\n    }, 5e3);\n    this.permissionCheckers.set(\"main\", checker);\n  }\n  /**\n   * 停止权限状态监控\n   */\n  stopPermissionMonitoring() {\n    this.permissionCheckers.forEach((checker) => clearInterval(checker));\n    this.permissionCheckers.clear();\n  }\n  /**\n   * 测试摄像头\n   */\n  async testCamera(constraints) {\n    if (!this.isSupported()) return false;\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: constraints || true\n      });\n      const videoTracks = stream.getVideoTracks();\n      const success = videoTracks.length > 0;\n      stream.getTracks().forEach((track) => track.stop());\n      return success;\n    } catch (error) {\n      console.warn(\"Camera test failed:\", error);\n      return false;\n    }\n  }\n  /**\n   * 测试麦克风\n   */\n  async testMicrophone(constraints) {\n    if (!this.isSupported()) return false;\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: constraints || true\n      });\n      const audioTracks = stream.getAudioTracks();\n      const success = audioTracks.length > 0;\n      stream.getTracks().forEach((track) => track.stop());\n      return success;\n    } catch (error) {\n      console.warn(\"Microphone test failed:\", error);\n      return false;\n    }\n  }\n  /**\n   * 获取媒体流\n   */\n  async getMediaStream(constraints) {\n    if (!this.isSupported()) return null;\n    try {\n      return await navigator.mediaDevices.getUserMedia(constraints || {\n        video: true,\n        audio: true\n      });\n    } catch (error) {\n      console.warn(\"Failed to get media stream:\", error);\n      return null;\n    }\n  }\n  /**\n   * 获取屏幕共享流\n   */\n  async getDisplayMedia(constraints) {\n    if (!this.isSupported()) return null;\n    if (!(\"getDisplayMedia\" in navigator.mediaDevices)) {\n      console.warn(\"Screen capture is not supported\");\n      return null;\n    }\n    try {\n      return await navigator.mediaDevices.getDisplayMedia(constraints || {\n        video: true,\n        audio: false\n      });\n    } catch (error) {\n      console.warn(\"Failed to get display media:\", error);\n      return null;\n    }\n  }\n}\n\nexport { MediaModule };\n/*! End of @ldesign/device | Powered by @ldesign/builder */\n//# sourceMappingURL=MediaModule.js.map\n"],"names":["MediaModule","EventEmitter","constructor","name","permissionCheckers","Map","mediaInfo","getDefaultMediaInfo","init","window","detectMediaDevices","setupDeviceChangeListener","startPermissionMonitoring","error","console","warn","destroy","removeDeviceChangeListener","stopPermissionMonitoring","getData","isSupported","safeNavigatorAccess","nav","mediaDevices","getCameras","cameras","getMicrophones","microphones","getSpeakers","speakers","hasCamera","hasMicrophone","hasSpeaker","requestCameraPermission","stream","navigator","getUserMedia","video","getTracks","forEach","track","stop","cameraPermission","emit","type","state","requestMicrophonePermission","audio","microphonePermission","supported","devices","enumerateDevices","device","index","deviceItem","deviceId","label","kind","groupId","push","length","checkPermissions","permissions","query","addEventListener","deviceChangeHandler","removeEventListener","checker","setInterval","set","clearInterval","clear","testCamera","constraints","videoTracks","getVideoTracks","success","testMicrophone","audioTracks","getAudioTracks","getMediaStream","getDisplayMedia"],"mappings":"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"}