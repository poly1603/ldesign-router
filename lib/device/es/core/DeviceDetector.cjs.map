{"version":3,"file":"DeviceDetector.cjs","sources":["../../../../../device/es/core/DeviceDetector.js"],"sourcesContent":["/*!\n * ***********************************\n * @ldesign/device v0.1.0          *\n * Built with rollup               *\n * Build time: 2024-10-21 14:32:55 *\n * Build mode: production          *\n * Minified: No                    *\n * ***********************************\n */\nimport { parseOS, parseBrowser, getPixelRatio, isTouchDevice, getScreenOrientation, getDeviceTypeByWidth, debounce } from '../utils/index.js';\nimport { SafeTimerManager, memoryManager } from '../utils/MemoryManager.js';\nimport { EventEmitter } from './EventEmitter.js';\nimport { ModuleLoader } from './ModuleLoader.js';\n\nconst _DeviceDetector = class _DeviceDetector extends EventEmitter {\n  /**\n   * 构造函数 - 创建设备检测器实例\n   *\n   * @param options 配置选项\n   * @param options.enableResize 是否启用窗口大小变化监听，默认 true\n   * @param options.enableOrientation 是否启用屏幕方向变化监听，默认 true\n   * @param options.modules 要加载的扩展模块列表，如 ['network', 'battery', 'geolocation']\n   * @param options.breakpoints 设备类型断点配置，用于判断设备类型\n   * @param options.debounceDelay 事件防抖时间（毫秒），默认 100ms\n   *\n   * @example\n   * ```typescript\n   * // 基础配置\n   * const detector = new DeviceDetector()\n   *\n   * // 自定义配置\n   * const detector = new DeviceDetector({\n   *   enableResize: true,\n   *   enableOrientation: true,\n   *   modules: ['network', 'battery'],\n   *   breakpoints: {\n   *     mobile: 768,\n   *     tablet: 1024\n   *   },\n   *   debounceDelay: 200\n   * })\n   * ```\n   */\n  constructor(options = {}) {\n    super();\n    this.isDestroyed = false;\n    // 缓存WebGL检测结果\n    this.webglCacheExpireTime = 0;\n    // WebGL缓存过期时间\n    this.lastDetectionTime = 0;\n    this.minDetectionInterval = 16;\n    // 约60fps\n    // 缓存过期时间(毫秒)\n    this.cacheExpireTime = 6e4;\n    // 1分钟\n    this.webglCacheLifetime = 3e5;\n    // WebGL缓存5分钟\n    this.cacheTimestamp = 0;\n    // 错误处理和重试机制\n    this.errorCount = 0;\n    this.maxErrors = 5;\n    this.lastErrorTime = 0;\n    this.errorCooldown = 5e3;\n    // 5秒错误冷却时间\n    // 性能监控（使用环形缓冲区，避免无限增长）\n    this.maxMetricsHistory = 100;\n    this.metricsHistory = [];\n    this.detectionMetrics = {\n      detectionCount: 0,\n      averageDetectionTime: 0,\n      lastDetectionDuration: 0\n    };\n    // 模块事件桥接的取消订阅器集合\n    this.moduleEventUnsubscribers = /* @__PURE__ */ new Map();\n    this.options = {\n      enableResize: true,\n      enableOrientation: true,\n      breakpoints: {\n        mobile: 768,\n        tablet: 1024\n      },\n      debounceDelay: 100,\n      ...options\n    };\n    this.timerManager = new SafeTimerManager();\n    this.moduleLoader = new ModuleLoader();\n    this.currentDeviceInfo = this.detectDevice();\n    this.setupEventListeners();\n    memoryManager.addGCCallback(() => this.cleanupCache());\n  }\n  /**\n   * 获取当前设备类型\n   */\n  getDeviceType() {\n    return this.currentDeviceInfo.type;\n  }\n  /**\n   * 获取当前屏幕方向\n   */\n  getOrientation() {\n    return this.currentDeviceInfo.orientation;\n  }\n  /**\n   * 获取完整的设备信息\n   *\n   * 返回当前设备的完整信息对象，包括：\n   * - 设备类型（desktop、mobile、tablet）\n   * - 屏幕尺寸和分辨率信息\n   * - 浏览器和操作系统信息\n   * - 设备方向和像素比\n   * - 触摸支持情况\n   *\n   * @returns DeviceInfo 设备信息对象\n   *\n   * @example\n   * ```typescript\n   * const detector = new DeviceDetector()\n   * const deviceInfo = detector.getDeviceInfo()\n   *\n   *  // 'mobile' | 'tablet' | 'desktop'\n   * \n   * \n   * \n   * \n   * ```\n   */\n  getDeviceInfo() {\n    return {\n      ...this.currentDeviceInfo\n    };\n  }\n  /**\n   * 获取检测性能指标\n   */\n  getDetectionMetrics() {\n    return {\n      ...this.detectionMetrics\n    };\n  }\n  /**\n   * 检查是否为移动设备\n   */\n  isMobile() {\n    return this.currentDeviceInfo.type === \"mobile\";\n  }\n  /**\n   * 检查是否为平板设备\n   */\n  isTablet() {\n    return this.currentDeviceInfo.type === \"tablet\";\n  }\n  /**\n   * 检查是否为桌面设备\n   */\n  isDesktop() {\n    return this.currentDeviceInfo.type === \"desktop\";\n  }\n  /**\n   * 检查是否为触摸设备\n   */\n  isTouchDevice() {\n    return this.currentDeviceInfo.isTouchDevice;\n  }\n  /**\n   * 刷新设备信息\n   */\n  refresh() {\n    this.lastDetectionTime = 0;\n    this.handleDeviceChange();\n  }\n  /**\n   * 动态加载扩展模块\n   */\n  async loadModule(name) {\n    if (this.isDestroyed) {\n      throw new Error(\"DeviceDetector has been destroyed\");\n    }\n    const instance = await this.moduleLoader.loadModuleInstance(name);\n    try {\n      const unsubs = [];\n      const withEvents = instance;\n      const hasOn = typeof withEvents.on === \"function\";\n      const hasOff = typeof withEvents.off === \"function\";\n      if (hasOn && hasOff) {\n        if (name === \"network\") {\n          const handler = (info) => this.emit(\"networkChange\", info);\n          withEvents.on?.(\"networkChange\", handler);\n          unsubs.push(() => withEvents.off?.(\"networkChange\", handler));\n        }\n        if (name === \"battery\") {\n          const handler = (info) => this.emit(\"batteryChange\", info);\n          withEvents.on?.(\"batteryChange\", handler);\n          unsubs.push(() => withEvents.off?.(\"batteryChange\", handler));\n        }\n        if (name === \"geolocation\") {\n          const handler = (info) => this.emit(\"positionChange\", info);\n          withEvents.on?.(\"positionChange\", handler);\n          unsubs.push(() => withEvents.off?.(\"positionChange\", handler));\n        }\n      }\n      if (unsubs.length > 0) {\n        this.moduleEventUnsubscribers.set(name, unsubs);\n      }\n    } catch {\n    }\n    return instance;\n  }\n  /**\n   * 卸载扩展模块\n   */\n  async unloadModule(name) {\n    const unsubs = this.moduleEventUnsubscribers.get(name);\n    if (unsubs && unsubs.length) {\n      unsubs.forEach((fn) => {\n        try {\n          fn();\n        } catch {\n        }\n      });\n      this.moduleEventUnsubscribers.delete(name);\n    }\n    await this.moduleLoader.unload(name);\n  }\n  /**\n   * 检查模块是否已加载\n   */\n  isModuleLoaded(name) {\n    return this.moduleLoader.isLoaded(name);\n  }\n  /**\n   * 获取已加载的模块列表\n   */\n  getLoadedModules() {\n    return this.moduleLoader.getLoadedModules();\n  }\n  /**\n   * 销毁检测器，清理资源\n   */\n  async destroy() {\n    if (this.isDestroyed) return;\n    this.isDestroyed = true;\n    this.removeEventListeners();\n    this.timerManager.clearAll();\n    this.moduleEventUnsubscribers.forEach((unsubs) => {\n      unsubs.forEach((fn) => {\n        try {\n          fn();\n        } catch {\n        }\n      });\n    });\n    this.moduleEventUnsubscribers.clear();\n    await this.moduleLoader.unloadAll();\n    this.removeAllListeners();\n    this.cleanupCache();\n    this.metricsHistory.length = 0;\n    memoryManager.removeGCCallback(() => this.cleanupCache());\n  }\n  /**\n   * 清理缓存\n   */\n  cleanupCache() {\n    this.cachedUserAgent = void 0;\n    this.cachedOS = void 0;\n    this.cachedBrowser = void 0;\n    this.cachedWebGLSupport = void 0;\n    this.cacheTimestamp = 0;\n    this.webglCacheExpireTime = 0;\n  }\n  /**\n   * 更新性能指标\n   */\n  updatePerformanceMetrics(detectionTime) {\n    this.detectionMetrics.detectionCount++;\n    this.detectionMetrics.lastDetectionDuration = detectionTime;\n    this.metricsHistory.push(detectionTime);\n    if (this.metricsHistory.length > this.maxMetricsHistory) {\n      this.metricsHistory.shift();\n    }\n    const sum = this.metricsHistory.reduce((a, b) => a + b, 0);\n    this.detectionMetrics.averageDetectionTime = sum / this.metricsHistory.length;\n  }\n  /**\n   * 处理检测错误\n   */\n  handleDetectionError(error) {\n    this.errorCount++;\n    this.lastErrorTime = performance.now();\n    console.warn(\"Device detection error:\", error);\n    if (this.errorCount >= this.maxErrors) {\n      this.emit(\"error\", {\n        message: \"Too many detection errors\",\n        count: this.errorCount,\n        lastError: error\n      });\n    }\n  }\n  /**\n   * 检测设备信息\n   */\n  detectDevice() {\n    if (typeof window === \"undefined\") {\n      return {\n        type: \"desktop\",\n        orientation: \"landscape\",\n        width: 1920,\n        height: 1080,\n        pixelRatio: 1,\n        isTouchDevice: false,\n        userAgent: \"\",\n        os: {\n          name: \"unknown\",\n          version: \"unknown\"\n        },\n        browser: {\n          name: \"unknown\",\n          version: \"unknown\"\n        },\n        screen: {\n          width: 1920,\n          height: 1080,\n          pixelRatio: 1,\n          availWidth: 1920,\n          availHeight: 1080\n        },\n        features: {\n          touch: false\n        }\n      };\n    }\n    const now = performance.now();\n    if (this.errorCount >= this.maxErrors && now - this.lastErrorTime < this.errorCooldown) {\n      return this.currentDeviceInfo;\n    }\n    if (now - this.lastDetectionTime < this.minDetectionInterval) {\n      return this.currentDeviceInfo;\n    }\n    const startTime = now;\n    this.lastDetectionTime = now;\n    try {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      const userAgent = navigator.userAgent;\n      let os = this.cachedOS;\n      let browser = this.cachedBrowser;\n      const cacheExpired = now - this.cacheTimestamp > this.cacheExpireTime;\n      if (this.cachedUserAgent !== userAgent || cacheExpired) {\n        this.cachedUserAgent = userAgent;\n        this.cachedOS = os = parseOS(userAgent);\n        this.cachedBrowser = browser = parseBrowser(userAgent);\n        this.cacheTimestamp = now;\n      }\n      const pixelRatio = getPixelRatio();\n      const touchDevice = isTouchDevice();\n      const deviceInfo = {\n        type: getDeviceTypeByWidth(width, this.options.breakpoints),\n        orientation: getScreenOrientation(),\n        width,\n        height,\n        pixelRatio,\n        isTouchDevice: touchDevice,\n        userAgent,\n        os: os || {\n          name: \"unknown\",\n          version: \"unknown\"\n        },\n        browser: browser || {\n          name: \"unknown\",\n          version: \"unknown\"\n        },\n        screen: {\n          width,\n          height,\n          pixelRatio,\n          availWidth: window.screen?.availWidth || width,\n          availHeight: window.screen?.availHeight || height\n        },\n        features: {\n          touch: touchDevice,\n          webgl: typeof window !== \"undefined\" ? this.detectWebGL() : false\n        }\n      };\n      const detectionTime = performance.now() - startTime;\n      this.updatePerformanceMetrics(detectionTime);\n      this.errorCount = 0;\n      return deviceInfo;\n    } catch (error) {\n      this.handleDetectionError(error);\n      return this.currentDeviceInfo;\n    }\n  }\n  /**\n   * 检测 WebGL 支持\n   *\n   * 优化: 缓存检测结果,复用canvas元素，减少内存分配\n   */\n  detectWebGL() {\n    const now = Date.now();\n    if (this.cachedWebGLSupport !== void 0 && this.webglCacheExpireTime > 0 && now - this.webglCacheExpireTime < this.webglCacheLifetime) {\n      return this.cachedWebGLSupport;\n    }\n    try {\n      const canvas = _DeviceDetector.canvasPool.pop() || document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const gl = canvas.getContext(\"webgl\", {\n        failIfMajorPerformanceCaveat: false,\n        antialias: false,\n        depth: false,\n        stencil: false\n      }) || canvas.getContext(\"experimental-webgl\", {\n        failIfMajorPerformanceCaveat: false,\n        antialias: false,\n        depth: false,\n        stencil: false\n      });\n      this.cachedWebGLSupport = !!gl;\n      if (gl && \"getExtension\" in gl) {\n        const loseContext = gl.getExtension(\"WEBGL_lose_context\");\n        loseContext?.loseContext();\n      }\n      if (_DeviceDetector.canvasPool.length < _DeviceDetector.maxCanvasPool) {\n        canvas.width = 1;\n        canvas.height = 1;\n        _DeviceDetector.canvasPool.push(canvas);\n      }\n      this.webglCacheExpireTime = now;\n      return this.cachedWebGLSupport;\n    } catch {\n      this.cachedWebGLSupport = false;\n      this.webglCacheExpireTime = now;\n      return false;\n    }\n  }\n  /**\n   * 设置事件监听器\n   */\n  setupEventListeners() {\n    if (typeof window === \"undefined\") return;\n    if (this.options.enableResize) {\n      this.resizeHandler = debounce(() => {\n        if (!this.isDestroyed) {\n          this.handleDeviceChange();\n        }\n      }, this.options.debounceDelay ?? 100);\n      window.addEventListener(\"resize\", this.resizeHandler, {\n        passive: true\n      });\n    }\n    if (this.options.enableOrientation) {\n      this.orientationHandler = debounce(() => {\n        if (!this.isDestroyed) {\n          this.handleDeviceChange();\n        }\n      }, this.options.debounceDelay ?? 100);\n      window.addEventListener(\"orientationchange\", this.orientationHandler, {\n        passive: true\n      });\n      if (!this.options.enableResize) {\n        window.addEventListener(\"resize\", this.orientationHandler, {\n          passive: true\n        });\n      }\n    }\n  }\n  /**\n   * 处理设备变化 - 优化版本\n   */\n  handleDeviceChange() {\n    if (this.isDestroyed) {\n      return;\n    }\n    try {\n      const oldDeviceInfo = this.currentDeviceInfo;\n      const newDeviceInfo = this.detectDevice();\n      if (this.hasDeviceInfoChanged(oldDeviceInfo, newDeviceInfo)) {\n        this.currentDeviceInfo = newDeviceInfo;\n        if (oldDeviceInfo.type !== newDeviceInfo.type) {\n          this.emit(\"deviceChange\", newDeviceInfo);\n        }\n        if (oldDeviceInfo.orientation !== newDeviceInfo.orientation) {\n          this.emit(\"orientationChange\", newDeviceInfo.orientation);\n        }\n        if (oldDeviceInfo.width !== newDeviceInfo.width || oldDeviceInfo.height !== newDeviceInfo.height) {\n          this.emit(\"resize\", {\n            width: newDeviceInfo.width,\n            height: newDeviceInfo.height\n          });\n        }\n      }\n    } catch (error) {\n      this.handleDetectionError(error);\n    }\n  }\n  /**\n   * 检查设备信息是否发生变化\n   */\n  hasDeviceInfoChanged(oldInfo, newInfo) {\n    return oldInfo.type !== newInfo.type || oldInfo.orientation !== newInfo.orientation || oldInfo.width !== newInfo.width || oldInfo.height !== newInfo.height || oldInfo.pixelRatio !== newInfo.pixelRatio;\n  }\n  /**\n   * 移除事件监听器\n   */\n  removeEventListeners() {\n    if (typeof window === \"undefined\") return;\n    if (this.resizeHandler) {\n      window.removeEventListener(\"resize\", this.resizeHandler);\n      this.resizeHandler = void 0;\n    }\n    if (this.orientationHandler) {\n      window.removeEventListener(\"orientationchange\", this.orientationHandler);\n      if (!this.options.enableResize) {\n        window.removeEventListener(\"resize\", this.orientationHandler);\n      }\n      this.orientationHandler = void 0;\n    }\n  }\n};\n// Canvas对象池（复用canvas元素）\n_DeviceDetector.canvasPool = [];\n_DeviceDetector.maxCanvasPool = 2;\nlet DeviceDetector = _DeviceDetector;\n\nexport { DeviceDetector };\n/*! End of @ldesign/device | Powered by @ldesign/builder */\n//# sourceMappingURL=DeviceDetector.js.map\n"],"names":["_DeviceDetector","EventEmitter","constructor","options","isDestroyed","webglCacheExpireTime","lastDetectionTime","minDetectionInterval","cacheExpireTime","webglCacheLifetime","cacheTimestamp","errorCount","maxErrors","lastErrorTime","errorCooldown","maxMetricsHistory","metricsHistory","detectionMetrics","detectionCount","averageDetectionTime","lastDetectionDuration","moduleEventUnsubscribers","Map","enableResize","enableOrientation","breakpoints","mobile","tablet","debounceDelay","timerManager","SafeTimerManager","moduleLoader","ModuleLoader","currentDeviceInfo","detectDevice","setupEventListeners","memoryManager","addGCCallback","cleanupCache","getDeviceType","type","getOrientation","orientation","getDeviceInfo","getDetectionMetrics","isMobile","isTablet","isDesktop","isTouchDevice","refresh","handleDeviceChange","loadModule","name","Error","instance","loadModuleInstance","unsubs","withEvents","hasOn","on","hasOff","off","handler","info","emit","push","length","set","unloadModule","get","forEach","fn","delete","unload","isModuleLoaded","isLoaded","getLoadedModules","destroy","removeEventListeners","clearAll","clear","unloadAll","removeAllListeners","removeGCCallback","cachedUserAgent","cachedOS","cachedBrowser","cachedWebGLSupport","updatePerformanceMetrics","detectionTime","shift","sum","reduce","a","b","handleDetectionError","error","performance","now","console","warn","message","count","lastError","window","width","height","pixelRatio","userAgent","os","version","browser","screen","availWidth","availHeight","features","touch","startTime","innerWidth","innerHeight","navigator","cacheExpired","parseOS","parseBrowser","getPixelRatio","touchDevice","deviceInfo","getDeviceTypeByWidth","getScreenOrientation","webgl","detectWebGL","Date","canvas","canvasPool","pop","document","createElement","gl","getContext","failIfMajorPerformanceCaveat","antialias","depth","stencil","loseContext","getExtension","maxCanvasPool","resizeHandler","debounce","addEventListener","passive","orientationHandler","oldDeviceInfo","newDeviceInfo","hasDeviceInfoChanged","oldInfo","newInfo","removeEventListener","DeviceDetector"],"mappings":"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"}