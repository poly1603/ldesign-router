{"version":3,"file":"index.cjs","sources":["../../../../../device/es/utils/index.js"],"sourcesContent":["/*!\n * ***********************************\n * @ldesign/device v0.1.0          *\n * Built with rollup               *\n * Build time: 2024-10-21 14:32:55 *\n * Build mode: production          *\n * Minified: No                    *\n * ***********************************\n */\nexport { MemoryManager, ObjectPool, SafeTimerManager, createReusablePool, memoryManager, timerManager } from './MemoryManager.js';\n\nclass LRUCache {\n  constructor(maxSize = 50, ttl = 3e5) {\n    this.cache = /* @__PURE__ */ new Map();\n    // 缓存过期时间(毫秒)\n    // 性能统计\n    this.stats = {\n      hits: 0,\n      misses: 0,\n      evictions: 0\n    };\n    this.maxSize = maxSize;\n    this.ttl = ttl;\n  }\n  get(key) {\n    const entry = this.cache.get(key);\n    if (entry === void 0) {\n      this.stats.misses++;\n      return void 0;\n    }\n    const now = Date.now();\n    if (now - entry.timestamp > this.ttl) {\n      this.cache.delete(key);\n      this.stats.misses++;\n      this.stats.evictions++;\n      return void 0;\n    }\n    this.stats.hits++;\n    if (now - entry.timestamp > this.ttl * 0.1) {\n      this.cache.delete(key);\n      this.cache.set(key, {\n        value: entry.value,\n        timestamp: now\n      });\n    }\n    return entry.value;\n  }\n  set(key, value) {\n    const now = Date.now();\n    if (this.cache.has(key)) {\n      this.cache.delete(key);\n    } else if (this.cache.size >= this.maxSize) {\n      const firstKey = this.cache.keys().next().value;\n      if (firstKey !== void 0) {\n        this.cache.delete(firstKey);\n        this.stats.evictions++;\n      }\n    }\n    this.cache.set(key, {\n      value,\n      timestamp: now\n    });\n  }\n  clear() {\n    this.cache.clear();\n    this.stats = {\n      hits: 0,\n      misses: 0,\n      evictions: 0\n    };\n  }\n  /**\n   * 获取缓存统计信息\n   */\n  getStats() {\n    return {\n      ...this.stats,\n      size: this.cache.size,\n      hitRate: this.stats.hits / (this.stats.hits + this.stats.misses) || 0\n    };\n  }\n  /**\n   * 清理过期项（优化：惰性清理，直接在迭代中删除）\n   */\n  cleanup() {\n    const now = Date.now();\n    for (const [key, entry] of this.cache.entries()) {\n      if (now - entry.timestamp > this.ttl) {\n        this.cache.delete(key);\n        this.stats.evictions++;\n      }\n    }\n  }\n}\nconst userAgentCache = new LRUCache(20);\nfunction parseUserAgent(userAgent) {\n  const cached = userAgentCache.get(userAgent);\n  if (cached) {\n    return cached;\n  }\n  const os = {\n    name: \"unknown\",\n    version: \"unknown\"\n  };\n  const windowsMatch = userAgent.match(/Windows NT (\\d+\\.\\d+)/);\n  if (windowsMatch) {\n    os.name = \"Windows\";\n    const version = windowsMatch[1];\n    const versionMap = {\n      \"10.0\": \"10\",\n      \"6.3\": \"8.1\",\n      \"6.2\": \"8\",\n      \"6.1\": \"7\",\n      \"6.0\": \"Vista\",\n      \"5.1\": \"XP\"\n    };\n    os.version = versionMap[version] || version;\n  } else if (/Mac OS X/.test(userAgent)) {\n    os.name = \"macOS\";\n    const macMatch = userAgent.match(/Mac OS X (\\d+[._]\\d+[._]?\\d*)/);\n    if (macMatch) {\n      os.version = macMatch[1].replace(/_/g, \".\");\n    }\n  } else if (/iPhone|iPad|iPod/.test(userAgent)) {\n    os.name = \"iOS\";\n    const iosMatch = userAgent.match(/OS (\\d+[._]\\d+[._]?\\d*)/);\n    if (iosMatch) {\n      os.version = iosMatch[1].replace(/_/g, \".\");\n    }\n  } else if (/Android/.test(userAgent)) {\n    os.name = \"Android\";\n    const androidMatch = userAgent.match(/Android (\\d+\\.\\d+)/);\n    if (androidMatch) {\n      os.version = androidMatch[1];\n    }\n  } else if (/Linux/.test(userAgent)) {\n    os.name = \"Linux\";\n  }\n  const browser = {\n    name: \"unknown\",\n    version: \"unknown\"\n  };\n  const chromeMatch = userAgent.match(/Chrome\\/(\\d+)/);\n  if (chromeMatch && !/Edg/.test(userAgent)) {\n    browser.name = \"Chrome\";\n    browser.version = chromeMatch[1];\n  } else if (/Edg/.test(userAgent)) {\n    browser.name = \"Edge\";\n    const edgeMatch = userAgent.match(/Edg\\/(\\d+)/);\n    if (edgeMatch) {\n      browser.version = edgeMatch[1];\n    }\n  } else if (/Firefox/.test(userAgent)) {\n    browser.name = \"Firefox\";\n    const firefoxMatch = userAgent.match(/Firefox\\/(\\d+)/);\n    if (firefoxMatch) {\n      browser.version = firefoxMatch[1];\n    }\n  } else if (/Safari/.test(userAgent) && !/Chrome/.test(userAgent)) {\n    browser.name = \"Safari\";\n    const safariMatch = userAgent.match(/Version\\/(\\d+)/);\n    if (safariMatch) {\n      browser.version = safariMatch[1];\n    }\n  }\n  const result = {\n    os,\n    browser\n  };\n  userAgentCache.set(userAgent, result);\n  return result;\n}\nfunction debounce(func, wait, immediate = false) {\n  let timeout = null;\n  let result;\n  const debounced = (...args) => {\n    const callNow = immediate && !timeout;\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      timeout = null;\n      if (!immediate) {\n        result = func(...args);\n      }\n    }, wait);\n    if (callNow) {\n      result = func(...args);\n    }\n    return result;\n  };\n  debounced.cancel = () => {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  return debounced;\n}\nfunction throttle(func, wait, options = {}) {\n  let timeout = null;\n  let previous = 0;\n  const {\n    leading = true,\n    trailing = true\n  } = options;\n  const throttled = (...args) => {\n    const now = Date.now();\n    if (!previous && !leading) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      func(...args);\n    } else if (!timeout && trailing) {\n      timeout = setTimeout(() => {\n        previous = leading ? Date.now() : 0;\n        timeout = null;\n        func(...args);\n      }, remaining);\n    }\n  };\n  throttled.cancel = () => {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    previous = 0;\n  };\n  return throttled;\n}\nfunction isMobileDevice(userAgent) {\n  if (typeof window === \"undefined\" && !userAgent) return false;\n  const ua = userAgent || (typeof window !== \"undefined\" ? window.navigator.userAgent : \"\");\n  const mobileRegex = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n  return mobileRegex.test(ua);\n}\nfunction isTouchDevice() {\n  if (typeof window === \"undefined\") return false;\n  return \"ontouchstart\" in window || navigator.maxTouchPoints > 0 || (navigator.msMaxTouchPoints || 0) > 0;\n}\nfunction getDeviceTypeByWidth(width, breakpoints = {\n  mobile: 768,\n  tablet: 1024\n}) {\n  if (width < breakpoints.mobile) return \"mobile\";\n  if (width < breakpoints.tablet) return \"tablet\";\n  return \"desktop\";\n}\nfunction getScreenOrientation(width, height) {\n  if (typeof window === \"undefined\" && (width === void 0 || height === void 0)) {\n    return \"landscape\";\n  }\n  if (width !== void 0 && height !== void 0) {\n    return width >= height ? \"landscape\" : \"portrait\";\n  }\n  if (typeof window !== \"undefined\" && screen.orientation) {\n    return screen.orientation.angle === 0 || screen.orientation.angle === 180 ? \"portrait\" : \"landscape\";\n  }\n  if (typeof window !== \"undefined\") return window.innerHeight > window.innerWidth ? \"portrait\" : \"landscape\";\n  return \"landscape\";\n}\nfunction parseOS(userAgent) {\n  return parseUserAgent(userAgent).os;\n}\nfunction parseBrowser(userAgent) {\n  return parseUserAgent(userAgent).browser;\n}\nfunction getPixelRatio() {\n  if (typeof window === \"undefined\") return 1;\n  return window.devicePixelRatio || 1;\n}\nfunction isAPISupported(api) {\n  if (typeof window === \"undefined\") return false;\n  const parts = api.split(\".\");\n  let obj = window;\n  for (const part of parts) {\n    if (!(part in obj)) return false;\n    obj = obj[part];\n  }\n  return true;\n}\nfunction safeNavigatorAccess(accessorOrProperty, fallback) {\n  if (typeof navigator === \"undefined\") return fallback;\n  try {\n    if (typeof accessorOrProperty === \"function\") {\n      return accessorOrProperty(navigator);\n    } else {\n      return navigator[accessorOrProperty] ?? fallback;\n    }\n  } catch {\n    return fallback;\n  }\n}\nfunction formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return \"0 Bytes\";\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${Number.parseFloat((bytes / k ** i).toFixed(dm))} ${sizes[i]}`;\n}\nfunction generateId(prefix) {\n  const id = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  return prefix ? `${prefix}-${id}` : id;\n}\nfunction memoize(fn, options = {}) {\n  const {\n    maxSize = 100,\n    ttl,\n    keyGenerator\n  } = options;\n  const cache = /* @__PURE__ */ new Map();\n  const memoized = ((...args) => {\n    const key = keyGenerator ? keyGenerator(...args) : JSON.stringify(args);\n    const cached = cache.get(key);\n    if (cached) {\n      if (ttl && Date.now() - cached.timestamp > ttl) {\n        cache.delete(key);\n      } else {\n        return cached.value;\n      }\n    }\n    const value = fn(...args);\n    if (cache.size >= maxSize) {\n      const firstKey = cache.keys().next().value;\n      if (firstKey !== void 0) {\n        cache.delete(firstKey);\n      }\n    }\n    cache.set(key, {\n      value,\n      timestamp: Date.now()\n    });\n    return value;\n  });\n  memoized.clear = () => cache.clear();\n  memoized.delete = (key) => cache.delete(key);\n  memoized.size = () => cache.size;\n  return memoized;\n}\nfunction defer(fn) {\n  if (typeof queueMicrotask !== \"undefined\") {\n    queueMicrotask(fn);\n  } else if (typeof Promise !== \"undefined\") {\n    Promise.resolve().then(fn);\n  } else {\n    setTimeout(fn, 0);\n  }\n}\nfunction safeJSONParse(json, fallback) {\n  try {\n    return JSON.parse(json);\n  } catch {\n    return fallback;\n  }\n}\nfunction deepClone(obj) {\n  if (obj === null || typeof obj !== \"object\") {\n    return obj;\n  }\n  if (obj instanceof Date) {\n    return new Date(obj.getTime());\n  }\n  if (Array.isArray(obj)) {\n    return obj.map((item) => deepClone(item));\n  }\n  if (obj instanceof Map) {\n    const cloned2 = /* @__PURE__ */ new Map();\n    obj.forEach((value, key) => {\n      cloned2.set(key, deepClone(value));\n    });\n    return cloned2;\n  }\n  if (obj instanceof Set) {\n    const cloned2 = /* @__PURE__ */ new Set();\n    obj.forEach((value) => {\n      cloned2.add(deepClone(value));\n    });\n    return cloned2;\n  }\n  const cloned = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      cloned[key] = deepClone(obj[key]);\n    }\n  }\n  return cloned;\n}\nfunction deepMerge(target, ...sources) {\n  if (!sources.length) return target;\n  const source = sources.shift();\n  if (source === void 0) return target;\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, {\n          [key]: {}\n        });\n        deepMerge(target[key], source[key]);\n      } else {\n        Object.assign(target, {\n          [key]: source[key]\n        });\n      }\n    }\n  }\n  return deepMerge(target, ...sources);\n}\nfunction isObject(item) {\n  return item !== null && typeof item === \"object\" && !Array.isArray(item);\n}\nasync function retry(fn, options = {}) {\n  const {\n    retries = 3,\n    delay = 1e3,\n    backoff = 1.5,\n    maxDelay = 1e4,\n    onRetry\n  } = options;\n  let lastError = new Error(\"No attempts made\");\n  let currentDelay = delay;\n  for (let attempt = 0; attempt <= retries; attempt++) {\n    try {\n      return await fn();\n    } catch (error) {\n      lastError = error instanceof Error ? error : new Error(String(error));\n      if (attempt < retries) {\n        onRetry?.(lastError, attempt + 1);\n        await new Promise((resolve) => setTimeout(resolve, currentDelay));\n        currentDelay = Math.min(currentDelay * backoff, maxDelay);\n      }\n    }\n  }\n  if (!lastError) {\n    throw new Error(\"Unknown error in retry function\");\n  }\n  throw new Error(lastError.message);\n}\nasync function asyncPool(poolLimit, array, iteratorFn) {\n  const len = array.length;\n  const results = Array.from({\n    length: len\n  });\n  const executing = [];\n  for (let i = 0; i < len; i++) {\n    const item = array[i];\n    const p = (async () => {\n      results[i] = await iteratorFn(item, i);\n    })();\n    if (poolLimit <= len) {\n      const e = p.then(() => {\n        const idx = executing.indexOf(e);\n        if (idx !== -1) {\n          executing.splice(idx, 1);\n        }\n      });\n      executing.push(e);\n      if (executing.length >= poolLimit) {\n        await Promise.race(executing);\n      }\n    }\n  }\n  await Promise.all(executing);\n  return results;\n}\nfunction promiseTimeout(promise, ms, timeoutError) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => {\n      reject(timeoutError || new Error(`Promise timeout after ${ms}ms`));\n    }, ms);\n    promise.then((value) => {\n      clearTimeout(timer);\n      resolve(value);\n    }).catch((error) => {\n      clearTimeout(timer);\n      reject(error);\n    });\n  });\n}\nfunction asyncDebounce(fn, wait) {\n  let timeout = null;\n  let pendingPromise = null;\n  return (...args) => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    if (!pendingPromise) {\n      pendingPromise = new Promise((resolve, reject) => {\n        timeout = setTimeout(async () => {\n          timeout = null;\n          try {\n            const result = await fn(...args);\n            resolve(result);\n          } catch (error) {\n            reject(error);\n          } finally {\n            pendingPromise = null;\n          }\n        }, wait);\n      });\n    }\n    return pendingPromise;\n  };\n}\nfunction asyncThrottle(fn, wait) {\n  let timeout = null;\n  let previous = 0;\n  let pendingPromise = null;\n  return async (...args) => {\n    const now = Date.now();\n    const remaining = wait - (now - previous);\n    if (remaining <= 0) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      pendingPromise = fn(...args);\n      return pendingPromise;\n    } else if (!timeout && !pendingPromise) {\n      return new Promise((resolve) => {\n        timeout = setTimeout(async () => {\n          previous = Date.now();\n          timeout = null;\n          pendingPromise = fn(...args);\n          const result = await pendingPromise;\n          pendingPromise = null;\n          resolve(result);\n        }, remaining);\n      });\n    }\n    return pendingPromise || void 0;\n  };\n}\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\nfunction isEmpty(value) {\n  if (value === null || value === void 0) {\n    return true;\n  }\n  if (typeof value === \"string\") {\n    return value.trim().length === 0;\n  }\n  if (Array.isArray(value)) {\n    return value.length === 0;\n  }\n  if (typeof value === \"object\") {\n    return Object.keys(value).length === 0;\n  }\n  return false;\n}\n\nexport { asyncDebounce, asyncPool, asyncThrottle, debounce, deepClone, deepMerge, defer, formatBytes, generateId, getDeviceTypeByWidth, getPixelRatio, getScreenOrientation, isAPISupported, isEmpty, isMobileDevice, isTouchDevice, memoize, parseBrowser, parseOS, promiseTimeout, retry, safeJSONParse, safeNavigatorAccess, sleep, throttle };\n/*! End of @ldesign/device | Powered by @ldesign/builder */\n//# sourceMappingURL=index.js.map\n"],"names":["LRUCache","constructor","maxSize","ttl","cache","Map","stats","hits","misses","evictions","get","key","entry","now","Date","timestamp","delete","set","value","has","size","firstKey","keys","next","clear","getStats","hitRate","cleanup","entries","userAgentCache","parseUserAgent","userAgent","cached","os","name","version","windowsMatch","match","versionMap","test","macMatch","replace","iosMatch","androidMatch","browser","chromeMatch","edgeMatch","firefoxMatch","safariMatch","result","debounce","func","wait","immediate","timeout","debounced","args","callNow","clearTimeout","setTimeout","cancel","isTouchDevice","window","navigator","maxTouchPoints","msMaxTouchPoints","getDeviceTypeByWidth","width","breakpoints","mobile","tablet","getScreenOrientation","height","screen","orientation","angle","innerHeight","innerWidth","parseOS","parseBrowser","getPixelRatio","devicePixelRatio","safeNavigatorAccess","accessorOrProperty","fallback","asyncPool","poolLimit","array","iteratorFn","len","length","results","Array","from","executing","i","item","p","e","then","idx","indexOf","splice","push","Promise","race","all"],"mappings":"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"}